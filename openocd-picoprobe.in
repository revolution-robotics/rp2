#!/usr/bin/env bash
#
# @(#) openocd-picoprobe.in
#
# Process this file with configure to create openocd wrapper.
#
: ${LSUSB_CMD:='@LSUSB_CMD@'}
: ${OPENOCD_CMD:='@OPENOCD_CMD@'}
: ${SED_CMD:='@SED_CMD@'}
: ${TR_CMD:='@TR_CMD@'}

# OS-agnstoic readlink for existent files/directories.
resolve-existing ()
{
    if $READLINK_CMD --version 2>&1 | $GREP_CMD -q 'coreutils'; then
        $READLINK_CMD -e "$@"
    else
        $READLINK_CMD -f N "$@"
    fi
}

debug-via-picoprobe ()
{
    local picoprobe_interface=''

    case $OSTYPE in
        linux-gnu)
            picoprobe_interface=$(
                $LSUSB_CMD  |
                    $SED_CMD -nE -e '/^Bus.*ID 2e8a:/{s/.*\s(\S+)$/\1/p;q}' |
                    $TR_CMD A-Z a-z
                               ) || return $?
            ;;
        darwin*)
            # XXX: MacPorts lsusb doesn't report interface...
            picoprobe_interface=cmsis-dap
            ;;
    esac

    pushd "${PICO_BASEDIR}/openocd"
    $OPENOCD_CMD -f "tcl/interface/${picoprobe_interface}.cfg" \
            -c 'adapter speed 5000' -f tcl/target/rp2040.cfg -s tcl "$@"
}

if test ."$0" = ."${BASH_SOURCE[0]}"; then
    declare script=$(resolve-existing "$0")
    declare script_dir=${0%/*}

    if test ."$PICO_BOARD" = .''; then
        export PICO_BOARD=pico
    fi

    if test ."$PICO_BASEDIR" = .''; then
        export PICO_BASEDIR=${script_dir}/board/${PICO_BOARD}
    fi

    debug-via-picoprobe "$@"
fi
